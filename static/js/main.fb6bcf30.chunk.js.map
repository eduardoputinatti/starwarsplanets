{"version":3,"sources":["context/PlanetContext.js","components/FilterNumber.js","components/Table.js","context/PlanetProvider.js","App.js","index.js"],"names":["PlanetContext","createContext","FilterNumbers","useContext","setFilter","filters","FilterNumberFunc","useState","column","comparison","value","atualState","setAtualState","a","filterByNumericValues","handleChange","target","name","data-testid","onChange","placeholder","type","onClick","Table","data","filterPlanets","filterNumber","filterMap","length","htmlFor","id","event","filterByName","FilterNumber","border","map","planet","key","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","PlanetProvider","children","setData","SetFilterPlanets","useEffect","fetch","then","itens","json","resultsComplet","results","getData","setFilterNumber","filterColumn","console","log","parseInt","filterComparison","filterValue","newData","filter","namePlanets","toLowerCase","includes","myPlanets","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb6bcf30.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PlanetContext = createContext();\n\nexport default PlanetContext;\n","import React, { useContext, useState } from 'react';\nimport PlanetContext from '../context/PlanetContext';\n\nfunction FilterNumbers() {\n  const { setFilter, filters, FilterNumberFunc } = useContext(PlanetContext);\n  const [atualState, setAtualState] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: '',\n  });\n\n  async function handleClick() {\n    setFilter({\n      ...filters,\n      filterByNumericValues: [\n        {\n          column: atualState.column,\n          comparison: atualState.comparison,\n          value: atualState.value,\n        },\n      ],\n    });\n    await FilterNumberFunc();\n  }\n\n  function handleChange({ target }) {\n    const { value, name } = target;\n    setAtualState({\n      ...atualState,\n      [name]: value,\n    });\n  }\n\n  return (\n    <form>\n      <select\n        name=\"column\"\n        data-testid=\"column-filter\"\n        onChange={ handleChange }\n      >\n        <option name=\"column\" value=\"population\">population</option>\n        <option name=\"column\" value=\"orbital_period\">orbital_period</option>\n        <option name=\"column\" value=\"diameter\">diameter</option>\n        <option name=\"column\" value=\"rotation_period\">rotation_period</option>\n        <option name=\"column\" value=\"surface_water\">surface_water</option>\n      </select>\n      <select name=\"comparison\" data-testid=\"comparison-filter\" onChange={ handleChange }>\n        <option name=\"comparison\" value=\"maior que\">maior que</option>\n        <option name=\"comparison\" value=\"menor que\">menor que</option>\n        <option name=\"comparison\" value=\"igual a\">igual a</option>\n      </select>\n      <input\n        name=\"value\"\n        data-testid=\"value-filter\"\n        placeholder=\"Digite o valor\"\n        onChange={ handleChange }\n      />\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ handleClick }\n      >\n        filtrar\n      </button>\n    </form>\n  );\n}\n\nexport default FilterNumbers;\n","import React, { useContext } from 'react';\nimport PlanetContext from '../context/PlanetContext';\nimport FilterNumbers from './FilterNumber';\n\nfunction Table() {\n  const { data,\n    filterPlanets,\n    setFilter,\n    filters,\n    filterNumber,\n  } = useContext(PlanetContext);\n\n  function handleChange(event) {\n    const { value } = event.target;\n    setFilter({\n      ...filters,\n      filterByName: {\n        name: value,\n      },\n    });\n  }\n\n  function filterMaps() {\n    if (filterPlanets.length <= 0) {\n      return data;\n    } if (filterNumber.length >= 1) {\n      return filterNumber;\n    }\n    return filterPlanets;\n  }\n\n  const filterMap = filterMaps();\n\n  return (\n    <main>\n      <form>\n        <label htmlFor=\"inputName\">\n          Digite o Nome de um Planeta\n          <input\n            id=\"inputName\"\n            data-testid=\"name-filter\"\n            onChange={ handleChange }\n          />\n        </label>\n      </form>\n      <FilterNumbers />\n      <table border={ 1 }>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Período de Rotação</th>\n            <th>Período Orbital</th>\n            <th>Diametro</th>\n            <th>Clima</th>\n            <th>Gravidade</th>\n            <th>Terreno</th>\n            <th>Água na Superfície</th>\n            <th>População</th>\n            <th>Filmes</th>\n            <th>Criado</th>\n            <th>Editado</th>\n            <th>url</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filterMap.map((planet) => (\n            <tr key={ planet.name }>\n              <td>{planet.name}</td>\n              <td>{planet.rotation_period}</td>\n              <td>{planet.orbital_period}</td>\n              <td>{planet.diameter}</td>\n              <td>{planet.climate}</td>\n              <td>{planet.gravity}</td>\n              <td>{planet.terrain}</td>\n              <td>{planet.surface_water}</td>\n              <td>{planet.population}</td>\n              <td>{planet.films}</td>\n              <td>{planet.created}</td>\n              <td>{planet.edited}</td>\n              <td>{planet.url}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n}\n\nexport default Table;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetContext from './PlanetContext';\n\nfunction PlanetProvider({ children }) {\n  const [data, setData] = useState([]);\n  const [filters, setFilter] = useState({\n    filterByName: {\n      name: '',\n    },\n    filterByNumericValues: [\n      {\n        column: '',\n        comparison: '',\n        value: '',\n      },\n    ],\n  });\n  // estado onde esta salvo o filtro por nome\n  const [filterPlanets, SetFilterPlanets] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const endpoint = 'https://swapi-trybe.herokuapp.com/api/planets/';\n      const resultsComplet = await fetch(endpoint).then((itens) => itens.json());\n      setData(resultsComplet.results);\n    };\n    getData();\n  }, []);\n\n  // função que faz o filtro do nome\n  function FilterName() {\n    const namePlanets = data.filter(\n      (planet) => planet.name.toLowerCase().includes(filters.filterByName.name),\n    );\n    SetFilterPlanets(namePlanets);\n  }\n\n  // função para fazer filtro  numerico\n  const [filterNumber, setFilterNumber] = useState([]);\n\n  function FilterNumberFunc() {\n    const filterColumn = filters.filterByNumericValues[0].column;\n    console.log(parseInt(filterColumn, 10));\n    console.log(filterColumn);\n    const filterComparison = filters.filterByNumericValues[0].comparison;\n    console.log(parseInt(filterComparison, 10));\n    console.log(filterComparison);\n    const filterValue = filters.filterByNumericValues[0].value;\n    console.log(parseInt(filterValue, 10));\n    console.log(filterValue);\n    // if (filterComparison === 'maior que' && filterColumn === filterPlanets) {\n    //   const planetFilterName = data.filter(\n    //     (planet) => planet.Key === filterColumn && Number(planet) > filterValue,\n    //   );\n    //   setFilterNumber(planetFilterName);\n    // }\n    // if (filterComparison === 'menor que' && filterColumn === filterPlanets) {\n    //   const planetFilterName = data.filter(\n    //     (planet) => planet.Key === filterColumn && Number(planet) < filterValue,\n    //   );\n    //   setFilterNumber(planetFilterName);\n    // }\n    // if (filterComparison === 'igual a' && filterColumn === filterPlanets) {\n    //   const planetFilterName = data.filter(\n    //     (planet) => planet.Key === filterColumn && Number(planet) === filterValue,\n    //   );\n    //   setFilterNumber(planetFilterName);\n    // }\n\n    const newData = data.filter((planet) => {\n      switch (filterComparison) {\n      case 'maior que':\n        return parseInt(planet[filterColumn], 10) > parseInt(filterValue, 10);\n      case 'menor que':\n        return parseInt(planet[filterColumn], 10) < parseInt(filterValue, 10);\n      case 'igual a':\n        return parseInt(planet[filterColumn], 10) === parseInt(filterValue, 10);\n      default:\n        return null;\n      }\n    });\n    setFilterNumber(newData);\n  }\n\n  useEffect(FilterName, [filters]);\n  useEffect(FilterNumberFunc, [filters]);\n\n  const myPlanets = {\n    data,\n    filterPlanets,\n    setFilter,\n    filters,\n    filterNumber,\n    FilterNumberFunc,\n  };\n\n  return (\n    <PlanetContext.Provider value={ myPlanets }>\n      {children}\n    </PlanetContext.Provider>\n  );\n}\n\nPlanetProvider.propTypes = ({\n  children: PropTypes.node,\n}).isRequired;\n\nexport default PlanetProvider;\n","import React from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport PlanetProvider from './context/PlanetProvider';\n\nfunction App() {\n  return (\n    <PlanetProvider>\n      <h1>Starwars Planets</h1>\n      <Table />\n    </PlanetProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}